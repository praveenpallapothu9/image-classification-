{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled1.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyMKYdkBN2UGU0rTQUBB+EyQ",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/praveenpallapothu9/image-classification-/blob/main/praveen.pallapothu9%20project\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "I9Y-mxKhobiq",
        "outputId": "5a97106b-429f-4602-817d-5416ae933b4c"
      },
      "source": [
        "!pip install ipython-autotime\n",
        "%load_ext autotime"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting ipython-autotime\n",
            "  Downloading https://files.pythonhosted.org/packages/b4/c9/b413a24f759641bc27ef98c144b590023c8038dfb8a3f09e713e9dff12c1/ipython_autotime-0.3.1-py2.py3-none-any.whl\n",
            "Requirement already satisfied: ipython in /usr/local/lib/python3.7/dist-packages (from ipython-autotime) (5.5.0)\n",
            "Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from ipython->ipython-autotime) (2.6.1)\n",
            "Requirement already satisfied: traitlets>=4.2 in /usr/local/lib/python3.7/dist-packages (from ipython->ipython-autotime) (5.0.5)\n",
            "Requirement already satisfied: prompt-toolkit<2.0.0,>=1.0.4 in /usr/local/lib/python3.7/dist-packages (from ipython->ipython-autotime) (1.0.18)\n",
            "Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.7/dist-packages (from ipython->ipython-autotime) (57.0.0)\n",
            "Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from ipython->ipython-autotime) (4.4.2)\n",
            "Requirement already satisfied: simplegeneric>0.8 in /usr/local/lib/python3.7/dist-packages (from ipython->ipython-autotime) (0.8.1)\n",
            "Requirement already satisfied: pexpect; sys_platform != \"win32\" in /usr/local/lib/python3.7/dist-packages (from ipython->ipython-autotime) (4.8.0)\n",
            "Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from ipython->ipython-autotime) (0.7.5)\n",
            "Requirement already satisfied: ipython-genutils in /usr/local/lib/python3.7/dist-packages (from traitlets>=4.2->ipython->ipython-autotime) (0.2.0)\n",
            "Requirement already satisfied: six>=1.9.0 in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython->ipython-autotime) (1.15.0)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython->ipython-autotime) (0.2.5)\n",
            "Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.7/dist-packages (from pexpect; sys_platform != \"win32\"->ipython->ipython-autotime) (0.7.0)\n",
            "Installing collected packages: ipython-autotime\n",
            "Successfully installed ipython-autotime-0.3.1\n",
            "time: 1.9 ms (started: 2021-06-28 12:43:04 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Dc9R02p6o7f-"
      },
      "source": [
        "\n",
        "#back end is python used\n",
        "#software is python \n",
        "#I prefer google colab\n",
        "#used to build ml source code program in it.\n",
        "\n",
        "\n",
        "#Data: Images\n",
        "#teachable machine:www.teachable machine\n",
        "\n",
        "# 1. download manually the images from google\n",
        "# 2. download dataset from kaggle.com\n",
        "# 3. build a Image web crawler\n",
        "# 4. use oython libraries to scrape the images(using bing,google)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S2Ro2wbDpHDH",
        "outputId": "653931e2-e61a-492a-cbcb-4db3ed2003c9"
      },
      "source": [
        "#used to download images from bing\n",
        "!pip install bing-image-downloader "
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting bing-image-downloader\n",
            "  Downloading https://files.pythonhosted.org/packages/c2/04/1872a689a30036aa0b81ac9fca124a7413cad71fdab714f727cf1a34b671/bing_image_downloader-1.1.1-py3-none-any.whl\n",
            "Installing collected packages: bing-image-downloader\n",
            "Successfully installed bing-image-downloader-1.1.1\n",
            "time: 2.94 s (started: 2021-06-28 12:43:09 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "j8gXksNTpRIC",
        "outputId": "464aba9e-68a8-41a9-de56-278c316d4d1b"
      },
      "source": [
        "!mkdir images"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "time: 112 ms (started: 2021-06-28 12:44:12 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TpvyeZWipgT1",
        "outputId": "9d55a136-8ddf-4a4e-f9ff-3c4423798d7e"
      },
      "source": [
        "from bing_image_downloader import downloader\n",
        "downloader.download(\"fish\",limit=30,output_dir='images',adult_filter_off=True)"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[%] Downloading Images to /content/images/fish\n",
            "\n",
            "\n",
            "[!!]Indexing page: 1\n",
            "\n",
            "[%] Indexed 30 Images on Page 1.\n",
            "\n",
            "===============================================\n",
            "\n",
            "[%] Downloading Image #1 from https://www.reefs4less.com/wp-content/uploads/2019/01/true-percula-clownfish-e1551667541931.png\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #2 from https://i.ytimg.com/vi/pASzVFLlmBQ/maxresdefault.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #3 from https://images1.ratemyfishtank.com/photo/13/1180x864h/33000/33299/13951-4-true-percula-clownfish-u6abxw.jpg\n",
            "[Error]Invalid image, not saving https://images1.ratemyfishtank.com/photo/13/1180x864h/33000/33299/13951-4-true-percula-clownfish-u6abxw.jpg\n",
            "\n",
            "[!] Issue getting: https://images1.ratemyfishtank.com/photo/13/1180x864h/33000/33299/13951-4-true-percula-clownfish-u6abxw.jpg\n",
            "[!] Error:: Invalid image, not saving https://images1.ratemyfishtank.com/photo/13/1180x864h/33000/33299/13951-4-true-percula-clownfish-u6abxw.jpg\n",
            "\n",
            "[%] Downloading Image #3 from https://images1.ratemyfishtank.com/photo/13/650x500c/28000/27731/12109-4-true-percula-clownfish-bqMi3ZI.jpg\n",
            "[Error]Invalid image, not saving https://images1.ratemyfishtank.com/photo/13/650x500c/28000/27731/12109-4-true-percula-clownfish-bqMi3ZI.jpg\n",
            "\n",
            "[!] Issue getting: https://images1.ratemyfishtank.com/photo/13/650x500c/28000/27731/12109-4-true-percula-clownfish-bqMi3ZI.jpg\n",
            "[!] Error:: Invalid image, not saving https://images1.ratemyfishtank.com/photo/13/650x500c/28000/27731/12109-4-true-percula-clownfish-bqMi3ZI.jpg\n",
            "\n",
            "[%] Downloading Image #3 from https://cdn.shopify.com/s/files/1/0614/1237/products/x4-true-percula-clown-fish-pacakge-free-bubble-anemone-marine-fish-packages.jpg?v=1538462230\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #4 from https://petshopes.com/wp-content/uploads/2021/01/cuttlefish-800340_1280-e1611464007638-1024x583.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #5 from https://i.pinimg.com/originals/59/9b/6c/599b6c6900105fc7fc506c0cd55257f4.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #6 from https://3.imimg.com/data3/YP/VK/MY-775467/true-percula-clown-fish-500x500.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #7 from https://www.whogivesafish.com/wp-content/uploads/2020/05/True-Percula-Clownfish.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #8 from https://cdn.frags2fishes.com/wp-content/uploads/2019/08/lg_107534_OnyxTruePerculaClownfish.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #9 from http://www.aquaticcreationsgroup.com/wp-content/uploads/2014/10/percula-clownfish_3.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #10 from http://cdn1.bigcommerce.com/server3200/zjvg3/products/283/images/983/image__80457.1397194931.1280.1280.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #11 from https://www.whogivesafish.com/wp-content/uploads/2020/05/Amphiprion-Percula-In-Aquarium-480x226.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #12 from https://www.azgardens.com/wp-content/uploads/2017/05/Algae-Eating-Juvenile-True-Siamese-Fish.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #13 from http://cdn3.bigcommerce.com/s-qqoyf9q9/products/1192/images/2402/ddd__01788.1478900238.500.659.jpg?c=2\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #14 from https://qph.fs.quoracdn.net/main-qimg-f2a493f5d4e6505623903ca41ee17aa5\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #15 from http://www.cichlids.com/uploads/tx_usercichlids/user_pics/4215/dsc_00_7774447572.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #16 from https://assets.rebelmouse.io/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbWFnZSI6Imh0dHBzOi8vYXNzZXRzLnJibC5tcy8xNzQ1NTc4OS9vcmlnaW4uanBnIiwiZXhwaXJlc19hdCI6MTYxNDE1MDY2MH0.zQEMWK6RDJ3Hjcp_uHyMzpdZojSM6RBME-lkruSnYq4/img.jpg?width=980\n",
            "[Error]Invalid image, not saving https://assets.rebelmouse.io/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbWFnZSI6Imh0dHBzOi8vYXNzZXRzLnJibC5tcy8xNzQ1NTc4OS9vcmlnaW4uanBnIiwiZXhwaXJlc19hdCI6MTYxNDE1MDY2MH0.zQEMWK6RDJ3Hjcp_uHyMzpdZojSM6RBME-lkruSnYq4/img.jpg?width=980\n",
            "\n",
            "[!] Issue getting: https://assets.rebelmouse.io/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbWFnZSI6Imh0dHBzOi8vYXNzZXRzLnJibC5tcy8xNzQ1NTc4OS9vcmlnaW4uanBnIiwiZXhwaXJlc19hdCI6MTYxNDE1MDY2MH0.zQEMWK6RDJ3Hjcp_uHyMzpdZojSM6RBME-lkruSnYq4/img.jpg?width=980\n",
            "[!] Error:: Invalid image, not saving https://assets.rebelmouse.io/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbWFnZSI6Imh0dHBzOi8vYXNzZXRzLnJibC5tcy8xNzQ1NTc4OS9vcmlnaW4uanBnIiwiZXhwaXJlc19hdCI6MTYxNDE1MDY2MH0.zQEMWK6RDJ3Hjcp_uHyMzpdZojSM6RBME-lkruSnYq4/img.jpg?width=980\n",
            "\n",
            "[%] Downloading Image #16 from https://1.bp.blogspot.com/-MytwAV2P_tY/VRlVuPn9RfI/AAAAAAAAkfg/iTbni8k6IoQ/s1600/catfish1.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #17 from https://hobo-assets.s3-us-west-2.amazonaws.com/images/true-blue-bonefish/beauty-bone.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #18 from http://1.bp.blogspot.com/-vc5kDn87rAs/TsPFcESCMRI/AAAAAAAAAZQ/KZYNfaRfx08/w1200-h630-p-k-no-nu/FISHSLEEPFLYER.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #19 from http://img2.chinadaily.com.cn/images/201807/20/5b51a6f1a310796d8b4cb86a.jpeg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #20 from https://texasfishingforum.com/forums/pics/userpics/2019/09/full-103204-26136-img_2029.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #21 from https://blog.buystonecanyon.com/wp-content/uploads/2019/07/img-1870x935.jpg?189db0&amp;189db0\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #22 from https://azgardens.com/wp-content/uploads/2017/05/True-Siamese-Algae-Eaters.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #23 from https://usercontent2.hubstatic.com/3934903.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #24 from http://www.aquariumadvice.com/forums/attachment.php?attachmentid=227863&amp;thumb=1&amp;d=1394760606\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #25 from https://www.tropicalaquarium.co.za/attachments/20170510_125223-jpg.58814/\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #26 from https://res.cloudinary.com/dk-find-out/image/upload/q_80,w_640,f_auto/A-rexfeatures_3846227a_T_a4snsa.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #27 from https://awesomeocean.com/wp-content/uploads/2016/09/Swordfish.png\n",
            "[%] File Downloaded !\n",
            "\n",
            "\n",
            "\n",
            "[!!]Indexing page: 2\n",
            "\n",
            "[%] Indexed 35 Images on Page 2.\n",
            "\n",
            "===============================================\n",
            "\n",
            "[%] Downloading Image #28 from https://www.reefs4less.com/wp-content/uploads/2019/01/true-percula-clownfish-e1551667541931.png\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #29 from https://i.ytimg.com/vi/pASzVFLlmBQ/maxresdefault.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #30 from https://images1.ratemyfishtank.com/photo/13/1180x864h/33000/33299/13951-4-true-percula-clownfish-u6abxw.jpg\n",
            "[Error]Invalid image, not saving https://images1.ratemyfishtank.com/photo/13/1180x864h/33000/33299/13951-4-true-percula-clownfish-u6abxw.jpg\n",
            "\n",
            "[!] Issue getting: https://images1.ratemyfishtank.com/photo/13/1180x864h/33000/33299/13951-4-true-percula-clownfish-u6abxw.jpg\n",
            "[!] Error:: Invalid image, not saving https://images1.ratemyfishtank.com/photo/13/1180x864h/33000/33299/13951-4-true-percula-clownfish-u6abxw.jpg\n",
            "\n",
            "[%] Downloading Image #30 from https://images1.ratemyfishtank.com/photo/13/650x500c/28000/27731/12109-4-true-percula-clownfish-bqMi3ZI.jpg\n",
            "[Error]Invalid image, not saving https://images1.ratemyfishtank.com/photo/13/650x500c/28000/27731/12109-4-true-percula-clownfish-bqMi3ZI.jpg\n",
            "\n",
            "[!] Issue getting: https://images1.ratemyfishtank.com/photo/13/650x500c/28000/27731/12109-4-true-percula-clownfish-bqMi3ZI.jpg\n",
            "[!] Error:: Invalid image, not saving https://images1.ratemyfishtank.com/photo/13/650x500c/28000/27731/12109-4-true-percula-clownfish-bqMi3ZI.jpg\n",
            "\n",
            "[%] Downloading Image #30 from https://cdn.shopify.com/s/files/1/0614/1237/products/x4-true-percula-clown-fish-pacakge-free-bubble-anemone-marine-fish-packages.jpg?v=1538462230\n",
            "[%] File Downloaded !\n",
            "\n",
            "\n",
            "\n",
            "[%] Done. Downloaded 30 images.\n",
            "===============================================\n",
            "\n",
            "Please show your support here\n",
            "https://www.buymeacoffee.com/gurugaurav\n",
            "\n",
            "===============================================\n",
            "\n",
            "time: 14.8 s (started: 2021-06-28 12:48:18 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jJ5TDgl-qccT",
        "outputId": "a792437b-f8a4-4ade-b81d-f9f5560c705f"
      },
      "source": [
        "downloader.download(\"parrot\",limit=30,output_dir='images',adult_filter_off=True)"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[%] Downloading Images to /content/images/parrot\n",
            "\n",
            "\n",
            "[!!]Indexing page: 1\n",
            "\n",
            "[%] Indexed 30 Images on Page 1.\n",
            "\n",
            "===============================================\n",
            "\n",
            "[%] Downloading Image #1 from http://animalia-life.com/data_images/parrot/parrot1.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #2 from https://theexoticbirds.net/wp-content/uploads/2018/05/true-parrot.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #3 from https://media.istockphoto.com/photos/gelbbrustara-macaw-on-perch-picture-id1071774564?k=6&amp;m=1071774564&amp;s=612x612&amp;w=0&amp;h=hayWGOhBTm3oYB-B9OPkeWakOsC6BxOKwNPwF_wnB1w=\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #4 from https://www.pafoszoo.com/wp-content/uploads/2018/12/thick-billed-parrot.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #5 from https://external-preview.redd.it/2OoKRW3c6DbqzmB6QzKfs6XQ4Iwpc_nVtj2XMIGPdIk.jpg?auto=webp&amp;s=6c818700a22fcf2abdd37123008271dcc5976e46\n",
            "[!] Issue getting: https://external-preview.redd.it/2OoKRW3c6DbqzmB6QzKfs6XQ4Iwpc_nVtj2XMIGPdIk.jpg?auto=webp&amp;s=6c818700a22fcf2abdd37123008271dcc5976e46\n",
            "[!] Error:: HTTP Error 403: Forbidden\n",
            "[%] Downloading Image #5 from https://i.pinimg.com/originals/70/bb/fe/70bbfe8aaad2b1e345e8dfd5d0fd4021.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #6 from https://greatlakesledger.com/wp-content/uploads/2018/07/Alberta-Neuroscientists-Find-Out-Why-Parrots-Are-Not-so-Bird-Brained.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #7 from https://media.buzzle.com/media/images-en/photos/birds/parrot/1200-14085076-eclectus-parrot.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #8 from http://4.bp.blogspot.com/-H4IjH0w6ELM/UfJ_NUfgrjI/AAAAAAAAAvA/de3gFW7ok30/s1600/parrot pictures+7.jpg\n",
            "[!] Issue getting: http://4.bp.blogspot.com/-H4IjH0w6ELM/UfJ_NUfgrjI/AAAAAAAAAvA/de3gFW7ok30/s1600/parrot pictures+7.jpg\n",
            "[!] Error:: 'ascii' codec can't encode character '\\xa0' in position 66: ordinal not in range(128)\n",
            "[%] Downloading Image #8 from https://seaworld.org/-/media/seaworld-dotorg/images/animal-bytes/banners-1900x700-or-1900x500/birds/eclectus_parrot_1900x700.ashx?version=1_202001242023\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #9 from http://cdn.differencebetween.net/wp-content/uploads/2018/10/Difference-Between-Parrot-and-Macaw-.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #10 from https://lh5.googleusercontent.com/yFq-vs6wMhgGri2BWOi74AvHTyjEHDl7UFUQJv-XALl7voNPRZ1Nn_PBlxKDOPyRzWR_WlMXHWcxf_c8_YK5jDtGn5hRNU9vnu0NhCfwtR6qs3u0HzXAiQsIk-5KoRLsCOzJuQ38\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #11 from https://i.pinimg.com/originals/34/12/71/341271c6ad4c6e76e40ddbb42b58a37c.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #12 from https://blog.parrotessentials.co.uk/wp-content/uploads/2018/03/Eclectus-Parrot-Male-_-Eric-Kilby-_-Flickr.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #13 from https://banner2.kisspng.com/20180213/jfe/kisspng-amazon-parrot-bird-true-parrot-computer-file-parrot-5a82dfd75a94c5.368510161518526423371.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #14 from https://pixfeeds.com/images/birds/parrots/1280-1200-480443304-colorful-parrots.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #15 from http://www.singing-wings-aviary.com/wp-content/uploads/2017/11/Parrot.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #16 from https://i.ytimg.com/vi/EAnA1_wR870/maxresdefault.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #17 from https://media.istockphoto.com/photos/turquoisefronted-amazon-picture-id1134995190?k=6&amp;m=1134995190&amp;s=612x612&amp;w=0&amp;h=T-ydM3JXS3edtmrjGxz9QtGOZaqICkzn13ElupRvAXU=\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #18 from https://www.pafoszoo.com/wp-content/uploads/2013/01/HAWK-HEADED-PARROT.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #19 from http://4.bp.blogspot.com/-KXtlhW9wja8/UI40mr7HzCI/AAAAAAAADQE/JeSRHZ8r3h8/s1600/Parrot-1.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #20 from https://steemitimages.com/640x0/https://cindyknoke.files.wordpress.com/2017/11/dsc02645.jpg\n",
            "[Error]Invalid image, not saving https://steemitimages.com/640x0/https://cindyknoke.files.wordpress.com/2017/11/dsc02645.jpg\n",
            "\n",
            "[!] Issue getting: https://steemitimages.com/640x0/https://cindyknoke.files.wordpress.com/2017/11/dsc02645.jpg\n",
            "[!] Error:: Invalid image, not saving https://steemitimages.com/640x0/https://cindyknoke.files.wordpress.com/2017/11/dsc02645.jpg\n",
            "\n",
            "[%] Downloading Image #20 from https://www.trbimg.com/img-5c6dec1a/turbine/sd-cm-plob-peninsula-parrots-20190220\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #21 from http://www.parrotsjoy.com/wp-content/uploads/2017/03/blauaras-406772_1280.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #22 from http://3.bp.blogspot.com/-v8H8_vWJarQ/UI40yo9LZLI/AAAAAAAADQU/j2ePi0zoJ58/s1600/Parrot-3.jpeg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #23 from https://media.istockphoto.com/photos/beautiful-colorful-sun-conure-wild-parrot-eating-cookie-picture-id929304158?k=6&amp;m=929304158&amp;s=612x612&amp;w=0&amp;h=RTuakpUDLNqfn44XXvwerXaIEvyTM695PE2UW1LvSiY=\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #24 from https://cdn.omlet.co.uk/images/originals/lilac-crowned-amazon.jpg\n",
            "[Error]Invalid image, not saving https://cdn.omlet.co.uk/images/originals/lilac-crowned-amazon.jpg\n",
            "\n",
            "[!] Issue getting: https://cdn.omlet.co.uk/images/originals/lilac-crowned-amazon.jpg\n",
            "[!] Error:: Invalid image, not saving https://cdn.omlet.co.uk/images/originals/lilac-crowned-amazon.jpg\n",
            "\n",
            "[%] Downloading Image #24 from https://pixfeeds.com/images/birds/parrots/1280-1200-485717506-red-neck-parrots.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #25 from https://mypetience.com/wp-content/uploads/2019/10/how-much-is-a-parrot.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #26 from https://animals.net/wp-content/uploads/2019/06/Parrot-5-650x425.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "\n",
            "\n",
            "[!!]Indexing page: 2\n",
            "\n",
            "[%] Indexed 35 Images on Page 2.\n",
            "\n",
            "===============================================\n",
            "\n",
            "[%] Downloading Image #27 from http://animalia-life.com/data_images/parrot/parrot1.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #28 from https://theexoticbirds.net/wp-content/uploads/2018/05/true-parrot.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #29 from https://media.istockphoto.com/photos/gelbbrustara-macaw-on-perch-picture-id1071774564?k=6&amp;m=1071774564&amp;s=612x612&amp;w=0&amp;h=hayWGOhBTm3oYB-B9OPkeWakOsC6BxOKwNPwF_wnB1w=\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #30 from https://www.pafoszoo.com/wp-content/uploads/2018/12/thick-billed-parrot.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "\n",
            "\n",
            "[%] Done. Downloaded 30 images.\n",
            "===============================================\n",
            "\n",
            "Please show your support here\n",
            "https://www.buymeacoffee.com/gurugaurav\n",
            "\n",
            "===============================================\n",
            "\n",
            "time: 18.1 s (started: 2021-06-28 12:51:22 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w2DgSPk1qsOM",
        "outputId": "870707ab-1352-4f08-9d50-a521406ae067"
      },
      "source": [
        "downloader.download(\"peacock\",limit=30,output_dir='images',adult_filter_off=True)"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[%] Downloading Images to /content/images/peacock\n",
            "\n",
            "\n",
            "[!!]Indexing page: 1\n",
            "\n",
            "[%] Indexed 30 Images on Page 1.\n",
            "\n",
            "===============================================\n",
            "\n",
            "[%] Downloading Image #1 from https://www.zoochat.com/community/media/green-peacock.222771/full?d=1367905951\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #2 from https://i.pinimg.com/736x/1b/d8/27/1bd8272450b4e320fc13a7d4e6a83b06--male-peacock-true-colors.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #3 from http://4.bp.blogspot.com/-o6JM4bDtUsg/UIVe9SrgVoI/AAAAAAAADLo/ZtsMAStcuRU/s1600/Peafowl.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #4 from https://i.pinimg.com/originals/a5/76/75/a576754a22b43c46dfcdc220b8c30623.png\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #5 from https://murals-weblinc.netdna-ssl.com/product_images/green-beautiful-peacock-19919346/5ec82d8abd89dd0018f758d4/zoom.jpg?c=1590177162\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #6 from https://i.pinimg.com/originals/a9/9c/ec/a99cecb38279297f15d0719d404302eb.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #7 from https://thumbs.dreamstime.com/z/all-peacocks-proud-to-show-off-their-beautiful-feathers-love-handsome-boy-s-stance-definitely-attentive-to-being-128611926.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #8 from http://2.bp.blogspot.com/-jEps9K8gfOM/UZTQL9CxpsI/AAAAAAAABaw/1xtf1BA1Dyo/s1600/peacock.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #9 from https://2.bp.blogspot.com/_2wyePCMy0iI/TRJo0gdiLEI/AAAAAAAAAfA/UbsqC6tvTFE/s1600/Peacock+gettin+in+my+face.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #10 from https://tailandfur.com/wp-content/uploads/2015/02/Beautiful-Peacock-Pictures-15.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #11 from https://www.yourtrueselfblog.com/wp-content/uploads/2019/04/peacock.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #12 from https://images.saymedia-content.com/.image/t_share/MTc2Mjg1NTQyMTY4NzMyODYy/the-true-meaning-behind-katy-perrys-peacock.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #13 from https://thisnzlife.co.nz/wp-content/uploads/2019/03/dreamstime_l_41697131.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #14 from https://i.pinimg.com/originals/b7/a5/10/b7a5106f0c98f3b174afea19a76b8694.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #15 from https://i.pinimg.com/736x/e1/d3/e3/e1d3e35a61b4d9f85190722fed09e3e0--peafowl-the-indians.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #16 from https://www.theindiaprint.com/uploads/images/2020/12/dsc100784871_750x500_5fe0f12db0888.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #17 from https://devino.com/wp-content/uploads/2020/08/Peacock.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #18 from https://www.whats-your-sign.com/wp-content/uploads/2018/02/PeacockSymbolism.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #19 from https://images.fineartamerica.com/images/artworkimages/mediumlarge/3/male-peacock-plumage-lyuba-filatova.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #20 from http://3.bp.blogspot.com/_i2dKgAIx5Hc/TLabYIZngTI/AAAAAAAAABU/ofDfvc8W8cQ/s1600/peacock.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #21 from https://i.pinimg.com/736x/75/6c/18/756c1818a6110208566210bdb42b6208--peacocks-butterfly.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #22 from https://tailandfur.com/wp-content/uploads/2015/02/Beautiful-Peacock-Pictures-14.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #23 from https://live.staticflickr.com/1618/25826203500_b821ef6659_b.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #24 from https://i.pinimg.com/736x/45/be/fe/45befe135b284ac05e602be43431c2c3--peacock-colors-peacock-feathers.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #25 from http://2.bp.blogspot.com/-4ugwW2mChh4/T7gDHm2OQdI/AAAAAAAACOw/H-fmn2mEEhc/s1600/Peacock-Symbolism.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #26 from https://lh3.googleusercontent.com/-G_8zTT7j2WA/TXtGLlNxcpI/AAAAAAAABms/QD6ywwlSa_I/s1600/peacock-wooing-peahen1.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #27 from https://nocheckedbags.com/wp-content/uploads/2012/05/Peacock.png\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #28 from https://i.pinimg.com/736x/5f/10/50/5f10503c63cf4d8034f483a5af7a6da3--peacocks-.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #29 from https://www.mespot.me/blog/wp-content/uploads/2018/02/Peacock.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "[%] Downloading Image #30 from https://i.pinimg.com/originals/f1/45/b2/f145b28335b7b47862f4f304994e21ed.jpg\n",
            "[%] File Downloaded !\n",
            "\n",
            "\n",
            "\n",
            "[%] Done. Downloaded 30 images.\n",
            "===============================================\n",
            "\n",
            "Please show your support here\n",
            "https://www.buymeacoffee.com/gurugaurav\n",
            "\n",
            "===============================================\n",
            "\n",
            "time: 12.6 s (started: 2021-06-28 12:51:40 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-SJ_mf10rM7J",
        "outputId": "29f14b73-e7ac-4760-c96d-1f510f439c42"
      },
      "source": [
        "import numpy as np\n",
        "\n",
        "a = np.array([[1,2,3,4,5],\n",
        "              [4,5,6,7,8]])\n",
        "a.ndim"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        },
        {
          "output_type": "stream",
          "text": [
            "time: 7.3 ms (started: 2021-06-28 12:55:26 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fIiWxr0YsIi5",
        "outputId": "5fcf38be-70bd-4652-c05a-77ed06316068"
      },
      "source": [
        "# How do i convert matrix to vector? - flatten()\n",
        "a.flatten()      #flatten is used for adjoining of the ndimensions"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 2, 3, 4, 5, 4, 5, 6, 7, 8])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 9
        },
        {
          "output_type": "stream",
          "text": [
            "time: 7.33 ms (started: 2021-06-28 12:55:44 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9WteC6XOsJUR",
        "outputId": "02c53838-0c7f-423b-f126-566aa4cc6fb3"
      },
      "source": [
        "# Preprocessing\n",
        "# 1. Resize\n",
        "# 2. Flatten\n",
        "\n",
        "import os                                 #it used for aceesing folders \n",
        "import matplotlib.pyplot as plt           #displaying the image\n",
        "import numpy as np                        #displaying numerical values\n",
        "from skimage.io import imread             #imread is used for reading the image\n",
        "from skimage.transform import resize      #resize of image\n",
        "\n",
        "target = []\n",
        "images = [] \n",
        "flat_data = []\n",
        "\n",
        "DATADIR = '/content/images'\n",
        "CATEGORIES = ['fish','parrot','peacock']\n",
        "\n",
        "for category in CATEGORIES:\n",
        "  class_num = CATEGORIES.index(category)  #label encoding the values\n",
        "  path = os.path.join(DATADIR,category)   #create path to use all the images\n",
        "  for img in os.listdir(path):\n",
        "    img_array = imread(os.path.join(path,img))\n",
        "    #print(img_array.shape)\n",
        "    #plt.imshow(img_array)\n",
        "    img_resized = resize(img_array,(150,150,3)) #Normalizes the value from 0 to 1\n",
        "    flat_data.append(img_resized.flatten())\n",
        "    images.append(img_resized)\n",
        "    target.append(class_num)\n",
        "\n",
        "flat_data = np.array(flat_data)\n",
        "target = np.array(target)\n",
        "images = np.array(images)"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "time: 16.6 s (started: 2021-06-28 12:57:34 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pQyW2uFNskJB",
        "outputId": "01ac225d-0407-439f-fe82-c1fcd3fe10b3"
      },
      "source": [
        "len(flat_data[0])"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "67500"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        },
        {
          "output_type": "stream",
          "text": [
            "time: 4.85 ms (started: 2021-06-28 12:58:21 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LJF5fsr0sv0b",
        "outputId": "204c4af5-d338-4501-a75c-0e5301307abb"
      },
      "source": [
        "150*150*3"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "67500"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        },
        {
          "output_type": "stream",
          "text": [
            "time: 3.64 ms (started: 2021-06-28 12:58:38 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mIL_qJ2Psz8a",
        "outputId": "19d81723-005f-429d-ab45-d7ec0ccff12a"
      },
      "source": [
        "target"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
              "       0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2,\n",
              "       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n",
              "       2, 2])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 13
        },
        {
          "output_type": "stream",
          "text": [
            "time: 5.78 ms (started: 2021-06-28 12:58:52 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        },
        "id": "nfN8XQxds3Qd",
        "outputId": "28d83fb0-b428-439b-c073-1837fb812cee"
      },
      "source": [
        "unique,count = np.unique(target,return_counts=True)\n",
        "plt.bar(CATEGORIES,count)"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<BarContainer object of 3 artists>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 14
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "time: 158 ms (started: 2021-06-28 12:59:17 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Y8XLh-tYs9cM",
        "outputId": "9311cfb8-20d4-4300-bbc5-05a8e81b87ac"
      },
      "source": [
        "#Split date into Training and Testing \n",
        "from sklearn.model_selection import train_test_split\n",
        "x_train,x_test,y_train,y_test = train_test_split(flat_data,target,test_size=0.3,random_state=109)\n"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "time: 26.5 ms (started: 2021-06-28 12:59:58 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "m5-EXk0AtC8e",
        "outputId": "b750f08b-994d-411a-acd9-d04e2561e571"
      },
      "source": [
        "from sklearn.model_selection import GridSearchCV\n",
        "from sklearn import svm \n",
        "param_grid = [\n",
        "              {'C':[1,10,100,1000],'kernel':['linear']},\n",
        "              {'C':[1,10,100,1000],'gamma':[0.001,0.0001],'kernel':['rbf']},\n",
        "]\n",
        "\n",
        "svc = svm.SVC(probability=True)\n",
        "clf = GridSearchCV(svc,param_grid)\n",
        "clf.fit(x_train,y_train)"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "GridSearchCV(cv=None, error_score=nan,\n",
              "             estimator=SVC(C=1.0, break_ties=False, cache_size=200,\n",
              "                           class_weight=None, coef0=0.0,\n",
              "                           decision_function_shape='ovr', degree=3,\n",
              "                           gamma='scale', kernel='rbf', max_iter=-1,\n",
              "                           probability=True, random_state=None, shrinking=True,\n",
              "                           tol=0.001, verbose=False),\n",
              "             iid='deprecated', n_jobs=None,\n",
              "             param_grid=[{'C': [1, 10, 100, 1000], 'kernel': ['linear']},\n",
              "                         {'C': [1, 10, 100, 1000], 'gamma': [0.001, 0.0001],\n",
              "                          'kernel': ['rbf']}],\n",
              "             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,\n",
              "             scoring=None, verbose=0)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        },
        {
          "output_type": "stream",
          "text": [
            "time: 1min 52s (started: 2021-06-28 13:02:07 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cB3ELpnFtNiH",
        "outputId": "73ca2b9d-0795-44da-c937-ce7dd9faffe9"
      },
      "source": [
        "y_pred = clf.predict(x_test)\n",
        "y_pred"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 2, 2, 2, 2, 0, 1, 2, 0, 0, 0, 0, 2, 0, 0, 0, 2, 2, 0, 1, 2, 2,\n",
              "       2, 0, 1, 0, 2])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 19
        },
        {
          "output_type": "stream",
          "text": [
            "time: 186 ms (started: 2021-06-28 13:04:06 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YWprYEn6uEDG",
        "outputId": "97173bde-49fa-406c-b317-5353ae978438"
      },
      "source": [
        "y_test"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 0, 1, 2, 2, 1, 0, 1, 1, 0, 1, 0, 1, 2, 2, 1, 2, 1, 0, 1, 2, 2,\n",
              "       2, 0, 0, 0, 1])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        },
        {
          "output_type": "stream",
          "text": [
            "time: 3.25 ms (started: 2021-06-28 13:05:36 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Zfe2mRcuuZ4P",
        "outputId": "5f7377d9-b223-45c9-9a96-602ba8be7a15"
      },
      "source": [
        "from sklearn.metrics import accuracy_score,confusion_matrix"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "time: 1.23 ms (started: 2021-06-28 13:06:08 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "j8pO3IqAuhr-",
        "outputId": "802f348d-8210-49a9-f629-006a914f19e9"
      },
      "source": [
        "accuracy_score(y_pred,y_test)"
      ],
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.48148148148148145"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 22
        },
        {
          "output_type": "stream",
          "text": [
            "time: 5.35 ms (started: 2021-06-28 13:06:24 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5FqhD2Ubulq1",
        "outputId": "49e85a98-2c41-479f-fe1a-aa696b28a6c0"
      },
      "source": [
        "confusion_matrix(y_pred,y_test)"
      ],
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[5, 4, 2],\n",
              "       [2, 2, 0],\n",
              "       [1, 5, 6]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 23
        },
        {
          "output_type": "stream",
          "text": [
            "time: 8.02 ms (started: 2021-06-28 13:06:40 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gkBYquf0upgi",
        "outputId": "1afc0d00-1ada-48cf-bbf8-efe3ed192926"
      },
      "source": [
        "#  Save the model using Pickle library\n",
        "import pickle\n",
        "pickle.dump(clf,open('img_model.p','wb'))"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "time: 41.4 ms (started: 2021-06-28 13:07:03 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Gtzcz3XkuvOe",
        "outputId": "6d371ebd-f3a2-4c2c-8ea6-d14a9de7e85d"
      },
      "source": [
        "model = pickle.load(open('img_model.p','rb'))"
      ],
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "time: 35.4 ms (started: 2021-06-28 13:07:23 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 336
        },
        "id": "CFGUkALHuz8H",
        "outputId": "5abe3c72-184f-4047-d99f-ebe3ed37e979"
      },
      "source": [
        "# Testing a brand new image\n",
        "flat_data = []\n",
        "url = input('Enter your URL')\n",
        "img = imread(url)\n",
        "img_resized = resize(img,(150,150,3))\n",
        "flat_data.append(img_resized.flatten())\n",
        "flat_data = np.array(flat_data)\n",
        "print(img.shape)\n",
        "plt.imshow(img_resized)\n",
        "y_out = model.predict(flat_data)\n",
        "y_out = CATEGORIES[y_out[0]]\n",
        "print(f' PREDICTED OUTPUT: {y_out}')"
      ],
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Enter your URLhttps://i.natgeofe.com/n/a4e20a18-8ae7-4f9a-be59-d7038dbd8d82/4463961.jpg\n",
            "(2204, 3072, 3)\n",
            " PREDICTED OUTPUT: peacock\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "time: 11.2 s (started: 2021-06-28 13:14:57 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KPui2_Oou9HK",
        "outputId": "fcfb04f7-fef7-4d49-e4e9-a2c534c72cb6"
      },
      "source": [
        "!pip install streamlit\n",
        "\n",
        "!pip install pyngrok\n",
        "from pyngrok import ngrok"
      ],
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: streamlit in /usr/local/lib/python3.7/dist-packages (0.83.0)\n",
            "Requirement already satisfied: pydeck>=0.1.dev5 in /usr/local/lib/python3.7/dist-packages (from streamlit) (0.6.2)\n",
            "Requirement already satisfied: blinker in /usr/local/lib/python3.7/dist-packages (from streamlit) (1.4)\n",
            "Requirement already satisfied: toml in /usr/local/lib/python3.7/dist-packages (from streamlit) (0.10.2)\n",
            "Requirement already satisfied: cachetools>=4.0 in /usr/local/lib/python3.7/dist-packages (from streamlit) (4.2.2)\n",
            "Requirement already satisfied: tornado>=5.0 in /usr/local/lib/python3.7/dist-packages (from streamlit) (5.1.1)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from streamlit) (1.19.5)\n",
            "Requirement already satisfied: astor in /usr/local/lib/python3.7/dist-packages (from streamlit) (0.8.1)\n",
            "Requirement already satisfied: tzlocal in /usr/local/lib/python3.7/dist-packages (from streamlit) (1.5.1)\n",
            "Requirement already satisfied: altair>=3.2.0 in /usr/local/lib/python3.7/dist-packages (from streamlit) (4.1.0)\n",
            "Requirement already satisfied: click<8.0,>=7.0 in /usr/local/lib/python3.7/dist-packages (from streamlit) (7.1.2)\n",
            "Requirement already satisfied: base58 in /usr/local/lib/python3.7/dist-packages (from streamlit) (2.1.0)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from streamlit) (20.9)\n",
            "Requirement already satisfied: watchdog; platform_system != \"Darwin\" in /usr/local/lib/python3.7/dist-packages (from streamlit) (2.1.3)\n",
            "Requirement already satisfied: protobuf!=3.11,>=3.6.0 in /usr/local/lib/python3.7/dist-packages (from streamlit) (3.12.4)\n",
            "Requirement already satisfied: pandas>=0.21.0 in /usr/local/lib/python3.7/dist-packages (from streamlit) (1.1.5)\n",
            "Requirement already satisfied: validators in /usr/local/lib/python3.7/dist-packages (from streamlit) (0.18.2)\n",
            "Requirement already satisfied: python-dateutil in /usr/local/lib/python3.7/dist-packages (from streamlit) (2.8.1)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from streamlit) (2.23.0)\n",
            "Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.7/dist-packages (from streamlit) (7.1.2)\n",
            "Requirement already satisfied: pyarrow; python_version < \"3.9\" in /usr/local/lib/python3.7/dist-packages (from streamlit) (3.0.0)\n",
            "Requirement already satisfied: gitpython in /usr/local/lib/python3.7/dist-packages (from streamlit) (3.1.18)\n",
            "Requirement already satisfied: traitlets>=4.3.2 in /usr/local/lib/python3.7/dist-packages (from pydeck>=0.1.dev5->streamlit) (5.0.5)\n",
            "Requirement already satisfied: ipywidgets>=7.0.0 in /usr/local/lib/python3.7/dist-packages (from pydeck>=0.1.dev5->streamlit) (7.6.3)\n",
            "Requirement already satisfied: jinja2>=2.10.1 in /usr/local/lib/python3.7/dist-packages (from pydeck>=0.1.dev5->streamlit) (2.11.3)\n",
            "Requirement already satisfied: ipykernel>=5.1.2; python_version >= \"3.4\" in /usr/local/lib/python3.7/dist-packages (from pydeck>=0.1.dev5->streamlit) (5.5.5)\n",
            "Requirement already satisfied: pytz in /usr/local/lib/python3.7/dist-packages (from tzlocal->streamlit) (2018.9)\n",
            "Requirement already satisfied: entrypoints in /usr/local/lib/python3.7/dist-packages (from altair>=3.2.0->streamlit) (0.3)\n",
            "Requirement already satisfied: jsonschema in /usr/local/lib/python3.7/dist-packages (from altair>=3.2.0->streamlit) (2.6.0)\n",
            "Requirement already satisfied: toolz in /usr/local/lib/python3.7/dist-packages (from altair>=3.2.0->streamlit) (0.11.1)\n",
            "Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->streamlit) (2.4.7)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from protobuf!=3.11,>=3.6.0->streamlit) (57.0.0)\n",
            "Requirement already satisfied: six>=1.9 in /usr/local/lib/python3.7/dist-packages (from protobuf!=3.11,>=3.6.0->streamlit) (1.15.0)\n",
            "Requirement already satisfied: decorator>=3.4.0 in /usr/local/lib/python3.7/dist-packages (from validators->streamlit) (4.4.2)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->streamlit) (3.0.4)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->streamlit) (1.24.3)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->streamlit) (2.10)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->streamlit) (2021.5.30)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4.0; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from gitpython->streamlit) (3.7.4.3)\n",
            "Requirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.7/dist-packages (from gitpython->streamlit) (4.0.7)\n",
            "Requirement already satisfied: ipython-genutils in /usr/local/lib/python3.7/dist-packages (from traitlets>=4.3.2->pydeck>=0.1.dev5->streamlit) (0.2.0)\n",
            "Requirement already satisfied: widgetsnbextension~=3.5.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (3.5.1)\n",
            "Requirement already satisfied: ipython>=4.0.0; python_version >= \"3.3\" in /usr/local/lib/python3.7/dist-packages (from ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (5.5.0)\n",
            "Requirement already satisfied: nbformat>=4.2.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (5.1.3)\n",
            "Requirement already satisfied: jupyterlab-widgets>=1.0.0; python_version >= \"3.6\" in /usr/local/lib/python3.7/dist-packages (from ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (1.0.0)\n",
            "Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from jinja2>=2.10.1->pydeck>=0.1.dev5->streamlit) (2.0.1)\n",
            "Requirement already satisfied: jupyter-client in /usr/local/lib/python3.7/dist-packages (from ipykernel>=5.1.2; python_version >= \"3.4\"->pydeck>=0.1.dev5->streamlit) (5.3.5)\n",
            "Requirement already satisfied: smmap<5,>=3.0.1 in /usr/local/lib/python3.7/dist-packages (from gitdb<5,>=4.0.1->gitpython->streamlit) (4.0.0)\n",
            "Requirement already satisfied: notebook>=4.4.1 in /usr/local/lib/python3.7/dist-packages (from widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (5.3.1)\n",
            "Requirement already satisfied: simplegeneric>0.8 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (0.8.1)\n",
            "Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (2.6.1)\n",
            "Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (0.7.5)\n",
            "Requirement already satisfied: pexpect; sys_platform != \"win32\" in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (4.8.0)\n",
            "Requirement already satisfied: prompt-toolkit<2.0.0,>=1.0.4 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (1.0.18)\n",
            "Requirement already satisfied: jupyter-core in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.2.0->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (4.7.1)\n",
            "Requirement already satisfied: pyzmq>=13 in /usr/local/lib/python3.7/dist-packages (from jupyter-client->ipykernel>=5.1.2; python_version >= \"3.4\"->pydeck>=0.1.dev5->streamlit) (22.1.0)\n",
            "Requirement already satisfied: nbconvert in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (5.6.1)\n",
            "Requirement already satisfied: terminado>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (0.10.1)\n",
            "Requirement already satisfied: Send2Trash in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (1.5.0)\n",
            "Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.7/dist-packages (from pexpect; sys_platform != \"win32\"->ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (0.7.0)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython>=4.0.0; python_version >= \"3.3\"->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (0.2.5)\n",
            "Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (0.8.4)\n",
            "Requirement already satisfied: bleach in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (3.3.0)\n",
            "Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (1.4.3)\n",
            "Requirement already satisfied: defusedxml in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (0.7.1)\n",
            "Requirement already satisfied: testpath in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (0.5.0)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.7/dist-packages (from bleach->nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->pydeck>=0.1.dev5->streamlit) (0.5.1)\n",
            "Requirement already satisfied: pyngrok in /usr/local/lib/python3.7/dist-packages (5.0.5)\n",
            "Requirement already satisfied: PyYAML in /usr/local/lib/python3.7/dist-packages (from pyngrok) (3.13)\n",
            "time: 5.58 s (started: 2021-06-28 13:17:34 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "J9RvZ_pjwvua",
        "outputId": "a63b856e-5d69-4b71-ec49-5fef34282f67"
      },
      "source": [
        "%%writefile app.py\n",
        "import streamlit as st\n",
        "import numpy as np\n",
        "from skimage.io import imread\n",
        "from skimage.transform import resize\n",
        "import pickle\n",
        "from PIL import Image\n",
        "st.title('Image Classifier using Machine Learning')\n",
        "st.text('Upload the Image')\n",
        "\n",
        "model = pickle.load(open('img_model,p','rb'))\n",
        "\n",
        "uploaded_file = st.file_uploader(\"Choose an image...\", type=\"jpg\")\n",
        "if  uploaded_file is not None:\n",
        "  img = Image.open(uploaded_file)\n",
        "  st.image(img,caption='Uploaded Image')\n"
      ],
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Writing app.py\n",
            "time: 2.57 ms (started: 2021-06-28 13:18:16 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ALEp1X5bxThm",
        "outputId": "9b1ca83c-3a64-4e7a-dfa1-9eb8d4b84b6c"
      },
      "source": [
        "!nohup streamlit run app.py &\n",
        "\n",
        "url = ngrok.connect(port='8501')\n",
        "url"
      ],
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "nohup: appending output to 'nohup.out'\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<NgrokTunnel: \"http://824378640eb6.ngrok.io\" -> \"http://localhost:80\">"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 34
        },
        {
          "output_type": "stream",
          "text": [
            "time: 2.21 s (started: 2021-06-28 13:18:50 +00:00)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jl1WfZz_xb0c"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}